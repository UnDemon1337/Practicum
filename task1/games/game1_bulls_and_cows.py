import random
from task1.utils.input_validation import get_valid_input


class BullsAndCowsGame:
    def __init__(self):
        self.secret_number = None
        self.attempts = 0
        self.game_over = False

    def generate_secret_number(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ —Å –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —Ü–∏—Ñ—Ä–∞–º–∏"""
        digits = list(range(10))
        random.shuffle(digits)
        while digits[0] == 0:
            random.shuffle(digits)
        self.secret_number = ''.join(map(str, digits[:4]))

    def is_valid_guess(self, guess):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not guess.isdigit():
            return False, "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!"

        if len(guess) != 4:
            return False, "–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 4-–∑–Ω–∞—á–Ω—ã–º!"

        if guess[0] == '0':
            return False, "–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 0!"

        if len(set(guess)) != 4:
            return False, "–í—Å–µ —Ü–∏—Ñ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º–∏!"

        return True, ""

    def calculate_bulls_and_cows(self, guess):
        """–í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ã–∫–æ–≤ –∏ –∫–æ—Ä–æ–≤"""
        bulls = 0
        cows = 0

        for i in range(4):
            if guess[i] == self.secret_number[i]:
                bulls += 1
            elif guess[i] in self.secret_number:
                cows += 1

        return bulls, cows

    def play_round(self):
        """–û–¥–∏–Ω —Ä–∞—É–Ω–¥ –∏–≥—Ä—ã"""
        guess = get_valid_input(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ: ",
            validation_func=self.is_valid_guess,
            error_message="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

        self.attempts += 1
        bulls, cows = self.calculate_bulls_and_cows(guess)

        if bulls == 4:
            self.game_over = True
            print(f"\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ {self.secret_number}!")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {self.attempts}")
        else:
            print(f"–ë—ã–∫–∏: {bulls}, –ö–æ—Ä–æ–≤—ã: {cows}")

            # –ü–æ–¥—Å–∫–∞–∑–∫–∏
            if bulls == 0 and cows == 0:
                print("‚ùå –ù–∏ –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç")
            elif bulls == 3:
                print("üî• –û—á–µ–Ω—å –±–ª–∏–∑–∫–æ! –û—Å—Ç–∞–ª–∞—Å—å –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ –Ω–µ –Ω–∞ –º–µ—Å—Ç–µ")
            elif cows == 4:
                print("üîÄ –í—Å–µ —Ü–∏—Ñ—Ä—ã –µ—Å—Ç—å –≤ —á–∏—Å–ª–µ, –Ω–æ –≤—Å–µ –Ω–µ –Ω–∞ —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö!")

    def play(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å"""
        print("=" * 50)
        print("           –ò–ì–†–ê 1: –ë–´–ö–ò –ò –ö–û–†–û–í–´")
        print("=" * 50)
        print("–ü—Ä–∞–≤–∏–ª–∞:")
        print("- –Ø –∑–∞–≥–∞–¥–∞–ª 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ —Å –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —Ü–∏—Ñ—Ä–∞–º–∏")
        print("- –ë—ã–∫–∏: —Ü–∏—Ñ—Ä–∞ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ")
        print("- –ö–æ—Ä–æ–≤—ã: —Ü–∏—Ñ—Ä–∞ –µ—Å—Ç—å –≤ —á–∏—Å–ª–µ, –Ω–æ –Ω–µ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ")
        print("- –ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 0")
        print("=" * 50)

        self.generate_secret_number()
        print("–ß–∏—Å–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å.")

        while not self.game_over:
            print(f"\n–ü–æ–ø—ã—Ç–∫–∞ #{self.attempts + 1}")
            self.play_round()


def play():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    game = BullsAndCowsGame()
    game.play()

    # –°–ø—Ä–æ—Å–∏—Ç—å –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–≥—Ä–µ
    while True:
        choice = input("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
        if choice in ['–¥–∞', '–¥', 'yes', 'y']:
            play()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã
            break
        elif choice in ['–Ω–µ—Ç', '–Ω', 'no', 'n']:
            print("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...")
            break
        else:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'")